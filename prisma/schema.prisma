// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  firstName   String        
  lastName    String
  userName    String        @unique
  gender      String        
  birthday    String      
  phoneNumber String
  email       String        @unique
  password    String
  createdAt   DateTime      @default("2020-03-18T14:21:00+02:00")
  updatedAt   DateTime      @default("2022-03-18T14:21:00+02:00")
  logins      Login[]
  avatar      Avatar[]
  photos      Photo[]
  comments    Comment[]
  commentsLiked CommentLike[]
  photosLiked   PhotoLike[]
}

model Photo {
  id          Int           @id @default(autoincrement())
  caption     String        
  height      Int           @default(250)
  width       Int           @default(250)
  createdAt   DateTime      @default("2020-03-18T14:21:00+02:00")
  updatedAt   DateTime      @default("2020-03-18T14:21:00+02:00")
  src         String
  userId      Int
  userWhoCreatedIt  User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  comments    Comment[]
  usersWhoLikedIt PhotoLike[]
}

model Comment {
  id          Int           @id @default(autoincrement())
  content     String        
  createdAt   DateTime      @default("2020-03-18T14:21:00+02:00")
  updatedAt   DateTime      @default("2020-03-18T14:21:00+02:00")
  userId      Int
  photoId     Int
  photo       Photo         @relation(fields: [photoId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userWhoCreatedIt  User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  usersWhoLikedIt   CommentLike[]
}

model Login {
  id          Int           @id @default(autoincrement())
  status      String        
  createdAt   DateTime      @default("2020-03-18T14:21:00+02:00")
  userId      Int
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Avatar {
  id          Int          @id @default(autoincrement())
  height      Int        @default(50)
  width       Int        @default(50)
  src         String
  createdAt   DateTime     @default("2020-03-18T14:21:00+02:00")
  updatedAt   DateTime     @default("2020-03-18T14:21:00+02:00")
  userId      Int          @unique
  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model CommentLike {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default("2020-03-18T14:21:00+02:00")
  updatedAt DateTime    @default("2020-03-18T14:21:00+02:00")
  userId    Int
  commentId Int
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  comment   Comment     @relation(fields: [commentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model PhotoLike {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default("2020-03-18T14:21:00+02:00")
  updatedAt DateTime    @default("2020-03-18T14:21:00+02:00")
  userId    Int
  photoId   Int
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  photo     Photo       @relation(fields: [photoId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}